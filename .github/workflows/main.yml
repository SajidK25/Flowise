name: Node CI

on:
    push:
        branches:
            - main
            - dev

    pull_request:
        branches:
            - '*'

permissions:
    contents: read

jobs:
    build:
        strategy:
            matrix:
                platform: [ubuntu-latest]
                node-version: [18.15.0]
        runs-on: ${{ matrix.platform }}
        env:
            PUPPETEER_SKIP_DOWNLOAD: true
        steps:
            - uses: actions/checkout@v3
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ matrix.node-version }}

            - run: npm i -g yarn

            - run: yarn install --ignore-engines

            - run: yarn lint

            - run: yarn build
    deploy:
        runs-on: ubuntu-latest
        timeout-minutes: 15

        steps:
          - uses: actions/checkout@v3
          - name: Check for Node.js, NPM, and Yarn
            uses: actions/setup-node@v3.1.1
            with:
                node-version: 18.15.0
                check-latest: true
                # cache: 'yarn'
                # cache-dependency-path: yarn.lock
        #   - name: Extract branch name
        #     shell: bash
        #     run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
        #     id: extract_branch   
          - name: Deploy to VPS
            uses: appleboy/ssh-action@master
            timeout-minutes: 10
            with:
              host: ${{ secrets.VPS_IP_ADRESS }}
              username: ${{ secrets.SSH_USERNAME }}
              password: ${{ secrets.SSH_PASSWORD }}
              script: |
                if ! command -v node &> /dev/null; then
                    echo "Node.js is not installed. Installing..."
                    sudo apt-get update
                    sudo apt-get install -y ca-certificates curl gnupg
                    sudo mkdir -p /etc/apt/keyrings
                    curl -fsSL https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key | sudo gpg --dearmor -o /etc/apt/keyrings/nodesource.gpg
                    NODE_MAJOR=18
                    echo "deb [signed-by=/etc/apt/keyrings/nodesource.gpg] https://deb.nodesource.com/node_$NODE_MAJOR.x nodistro main" | sudo tee /etc/apt/sources.list.d/nodesource.list
                    sudo apt-get update
                    sudo apt-get install nodejs -y
                fi
                if ! command -v npm &> /dev/null; then
                        echo "npm is not installed. Installing..."
                        sudo apt-get install -y npm
                fi
                if ! command -v yarn &> /dev/null; then
                    echo "Yarn is not installed. Installing..."
                    sudo apt update -y && sudo apt install -y curl
                    curl -sL https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
                    echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
                    sudo apt install yarn -y 
                fi
                cd $(pwd)/Flowise_dev
                git stash
                git pull
                #git fetch --all
                #git branch backup-$(git rev-parse --abbrev-ref HEAD)
                #git reset --hard origin/$(git rev-parse --abbrev-ref HEAD)
                sleep 3
                sudo chmod +x ./setup_env.sh
                bash ./setup_env.sh

                # Install dependencies
                yarn install
                # Build code
                yarn cache clean
                yarn build
                # PORT check and kill the running process
                PORT=3001
                if lsof -i :$PORT >/dev/null; then
                    echo "Port $PORT is occupied. Freeing it..."
                    sudo kill -9 $(sudo lsof -t -i :$PORT)
                    echo "Port $PORT has been freed."
                else
                    echo "Port $PORT is not occupied."
                fi
                PORT=8088
                if lsof -i :$PORT >/dev/null; then
                    echo "Port $PORT is occupied. Freeing it..."
                    sudo kill -9 $(sudo lsof -t -i :$PORT)
                    echo "Port $PORT has been freed."
                else
                    echo "Port $PORT is not occupied."
                fi
                # Start the app
                nohup yarn dev &
                
                yarn build
                yarn start
